import { Component, Input } from '@angular/core';
import { forkJoin } from 'rxjs';
import { map } from 'rxjs/operators';
import { NgxCoreChUserInfoErrorPageComponent } from './user-info-error-page/user-info-error-page.component';
import * as i0 from "@angular/core";
import * as i1 from "../../services/user-service/current-user.service";
import * as i2 from "@angular/common";
import * as i3 from "@aposin/ng-aquila/context-menu";
import * as i4 from "@aposin/ng-aquila/icon";
import * as i5 from "@aposin/ng-aquila/button";
export class NgxCoreChUserInfoComponent {
    constructor(currentUserService) {
        this.currentUserService = currentUserService;
    }
    ngOnInit() {
        this.currentUserService.errorPageComponent = NgxCoreChUserInfoErrorPageComponent;
        this.getCurrentUser();
    }
    getCurrentUser() {
        this.currentUser$ = forkJoin([
            this.currentUserService.getUserProfile().pipe(map((currentUser) => {
                this.currentUser = currentUser;
            })),
            this.currentUserService.getUserRoles().pipe(map((userRoles) => {
                this.userRoles = userRoles.userroles;
            })),
        ]);
    }
    getCurrentUserId() {
        return this.currentUserId;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.1", ngImport: i0, type: NgxCoreChUserInfoComponent, deps: [{ token: i1.CurrentUserService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.1", type: NgxCoreChUserInfoComponent, selector: "ngx-core-ch-user-info", inputs: { currentUserId: "currentUserId" }, ngImport: i0, template: "<div *ngIf=\"(currentUser$ | async); else userId\">\n    <ng-container>\n      {{currentUser.firstname}} {{currentUser.lastname}}\n    </ng-container>\n    <nx-context-menu #menu=\"nxContextMenu\">\n      <p nxContextMenuItem>{{currentUser.bukrsGe}}</p>\n      <p nxContextMenuItem>{{currentUser.ounr}} - {{currentUser.oushortname}}</p>\n      <p nxContextMenuItem *ngIf=\"currentUser.asuvornamegeneralagent\">\n        {{currentUser.asuvornamegeneralagent}} {{currentUser.asunachnamegeneralagent}}\n        - {{currentUser.city}}</p>\n      <p nxContextMenuItem *ngIf=\"currentUser.agencytype\">{{currentUser.agencytype}}</p>\n      <p nxContextMenuItem *ngIf=\"userRoles\">{{userRoles.join(', ')}}</p>\n    </nx-context-menu>\n    <button\n      nxIconButton=\"tertiary small\"\n      [nxContextMenuTriggerFor]=\"menu\"\n      aria-label=\"Open menu\"\n      type=\"button\"\n      class=\"nx-margin-left-2xs\">\n      <nx-icon aria-hidden=\"true\" name=\"chevron-down-small\" size=\"s\"></nx-icon>\n    </button>\n</div>\n<ng-template #userId>{{getCurrentUserId()}}</ng-template>\n", styles: [""], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.NxContextMenuComponent, selector: "nx-context-menu", outputs: ["closed"], exportAs: ["nxContextMenu"] }, { kind: "component", type: i3.NxContextMenuItemComponent, selector: "[nxContextMenuItem]", inputs: ["disabled", "disableCloseOnSelect"], exportAs: ["nxContextMenuItem"] }, { kind: "directive", type: i3.NxContextMenuTriggerDirective, selector: "[nxContextMenuTriggerFor]", inputs: ["nxContextMenuTriggerFor", "scrollStrategy", "nxContextMenuTriggerData", "nxContextMenuTriggerMode"], outputs: ["contextMenuOpened", "contextMenuClosed"], exportAs: ["nxContextMenuTrigger"] }, { kind: "component", type: i4.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }, { kind: "component", type: i5.NxIconButtonComponent, selector: "button[nxIconButton]", inputs: ["nxIconButton"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.1", ngImport: i0, type: NgxCoreChUserInfoComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-core-ch-user-info', template: "<div *ngIf=\"(currentUser$ | async); else userId\">\n    <ng-container>\n      {{currentUser.firstname}} {{currentUser.lastname}}\n    </ng-container>\n    <nx-context-menu #menu=\"nxContextMenu\">\n      <p nxContextMenuItem>{{currentUser.bukrsGe}}</p>\n      <p nxContextMenuItem>{{currentUser.ounr}} - {{currentUser.oushortname}}</p>\n      <p nxContextMenuItem *ngIf=\"currentUser.asuvornamegeneralagent\">\n        {{currentUser.asuvornamegeneralagent}} {{currentUser.asunachnamegeneralagent}}\n        - {{currentUser.city}}</p>\n      <p nxContextMenuItem *ngIf=\"currentUser.agencytype\">{{currentUser.agencytype}}</p>\n      <p nxContextMenuItem *ngIf=\"userRoles\">{{userRoles.join(', ')}}</p>\n    </nx-context-menu>\n    <button\n      nxIconButton=\"tertiary small\"\n      [nxContextMenuTriggerFor]=\"menu\"\n      aria-label=\"Open menu\"\n      type=\"button\"\n      class=\"nx-margin-left-2xs\">\n      <nx-icon aria-hidden=\"true\" name=\"chevron-down-small\" size=\"s\"></nx-icon>\n    </button>\n</div>\n<ng-template #userId>{{getCurrentUserId()}}</ng-template>\n" }]
        }], ctorParameters: () => [{ type: i1.CurrentUserService }], propDecorators: { currentUserId: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1pbmZvLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FsbGlhbnpjaC9uZ3gtY29yZS1jaC9zcmMvbGliL2NvbXBvbmVudHMvdXNlci1pbmZvL3VzZXItaW5mby5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbGxpYW56Y2gvbmd4LWNvcmUtY2gvc3JjL2xpYi9jb21wb25lbnRzL3VzZXItaW5mby91c2VyLWluZm8uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLFFBQVEsRUFBYyxNQUFNLE1BQU0sQ0FBQztBQUM1QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFJckMsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sdURBQXVELENBQUM7Ozs7Ozs7QUFTNUcsTUFBTSxPQUFPLDBCQUEwQjtJQU1yQyxZQUFvQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtJQUFHLENBQUM7SUFFOUQsUUFBUTtRQUNOLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxrQkFBa0IsR0FBRyxtQ0FBbUMsQ0FBQztRQUNqRixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVPLGNBQWM7UUFDcEIsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUM7WUFDM0IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGNBQWMsRUFBRSxDQUFDLElBQUksQ0FDM0MsR0FBRyxDQUFDLENBQUMsV0FBNEIsRUFBRSxFQUFFO2dCQUNuQyxJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztZQUNqQyxDQUFDLENBQUMsQ0FDSDtZQUNELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxJQUFJLENBQ3pDLEdBQUcsQ0FBQyxDQUFDLFNBQTZCLEVBQUUsRUFBRTtnQkFDcEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDO1lBQ3ZDLENBQUMsQ0FBQyxDQUNIO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELGdCQUFnQjtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDOzhHQTlCVSwwQkFBMEI7a0dBQTFCLDBCQUEwQix5R0NmdkMsOGpDQXVCQTs7MkZEUmEsMEJBQTBCO2tCQVB0QyxTQUFTOytCQUVFLHVCQUF1Qjt1RkFNeEIsYUFBYTtzQkFBckIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZm9ya0pvaW4sIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFBlcnNvbkludGVyZmFjZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3VzZXItc2VydmljZS9wZXJzb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IEN1cnJlbnRVc2VyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3VzZXItc2VydmljZS9jdXJyZW50LXVzZXIuc2VydmljZSc7XG5pbXBvcnQgeyBVc2Vycm9sZXNJbnRlcmZhY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy91c2VyLXNlcnZpY2UvdXNlcnJvbGVzLmludGVyZmFjZSc7XG5pbXBvcnQgeyBOZ3hDb3JlQ2hVc2VySW5mb0Vycm9yUGFnZUNvbXBvbmVudCB9IGZyb20gJy4vdXNlci1pbmZvLWVycm9yLXBhZ2UvdXNlci1pbmZvLWVycm9yLXBhZ2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIC8qZXNsaW50LWRpc2FibGUgKi9cbiAgc2VsZWN0b3I6ICduZ3gtY29yZS1jaC11c2VyLWluZm8nLFxuICB0ZW1wbGF0ZVVybDogJy4vdXNlci1pbmZvLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdXNlci1pbmZvLmNvbXBvbmVudC5zY3NzJ10sXG4gIC8qZXNsaW50LWVuYWJsZSAqL1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hDb3JlQ2hVc2VySW5mb0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGN1cnJlbnRVc2VySWQhOiBzdHJpbmc7XG4gIGN1cnJlbnRVc2VyJCE6IE9ic2VydmFibGU8YW55PjtcbiAgY3VycmVudFVzZXIhOiBQZXJzb25JbnRlcmZhY2U7XG4gIHVzZXJSb2xlcyE6IHN0cmluZ1tdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY3VycmVudFVzZXJTZXJ2aWNlOiBDdXJyZW50VXNlclNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5jdXJyZW50VXNlclNlcnZpY2UuZXJyb3JQYWdlQ29tcG9uZW50ID0gTmd4Q29yZUNoVXNlckluZm9FcnJvclBhZ2VDb21wb25lbnQ7XG4gICAgdGhpcy5nZXRDdXJyZW50VXNlcigpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRDdXJyZW50VXNlcigpOiB2b2lkIHtcbiAgICB0aGlzLmN1cnJlbnRVc2VyJCA9IGZvcmtKb2luKFtcbiAgICAgIHRoaXMuY3VycmVudFVzZXJTZXJ2aWNlLmdldFVzZXJQcm9maWxlKCkucGlwZShcbiAgICAgICAgbWFwKChjdXJyZW50VXNlcjogUGVyc29uSW50ZXJmYWNlKSA9PiB7XG4gICAgICAgICAgdGhpcy5jdXJyZW50VXNlciA9IGN1cnJlbnRVc2VyO1xuICAgICAgICB9KSxcbiAgICAgICksXG4gICAgICB0aGlzLmN1cnJlbnRVc2VyU2VydmljZS5nZXRVc2VyUm9sZXMoKS5waXBlKFxuICAgICAgICBtYXAoKHVzZXJSb2xlczogVXNlcnJvbGVzSW50ZXJmYWNlKSA9PiB7XG4gICAgICAgICAgdGhpcy51c2VyUm9sZXMgPSB1c2VyUm9sZXMudXNlcnJvbGVzO1xuICAgICAgICB9KSxcbiAgICAgICksXG4gICAgXSk7XG4gIH1cblxuICBnZXRDdXJyZW50VXNlcklkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuY3VycmVudFVzZXJJZDtcbiAgfVxufVxuIiwiPGRpdiAqbmdJZj1cIihjdXJyZW50VXNlciQgfCBhc3luYyk7IGVsc2UgdXNlcklkXCI+XG4gICAgPG5nLWNvbnRhaW5lcj5cbiAgICAgIHt7Y3VycmVudFVzZXIuZmlyc3RuYW1lfX0ge3tjdXJyZW50VXNlci5sYXN0bmFtZX19XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG54LWNvbnRleHQtbWVudSAjbWVudT1cIm54Q29udGV4dE1lbnVcIj5cbiAgICAgIDxwIG54Q29udGV4dE1lbnVJdGVtPnt7Y3VycmVudFVzZXIuYnVrcnNHZX19PC9wPlxuICAgICAgPHAgbnhDb250ZXh0TWVudUl0ZW0+e3tjdXJyZW50VXNlci5vdW5yfX0gLSB7e2N1cnJlbnRVc2VyLm91c2hvcnRuYW1lfX08L3A+XG4gICAgICA8cCBueENvbnRleHRNZW51SXRlbSAqbmdJZj1cImN1cnJlbnRVc2VyLmFzdXZvcm5hbWVnZW5lcmFsYWdlbnRcIj5cbiAgICAgICAge3tjdXJyZW50VXNlci5hc3V2b3JuYW1lZ2VuZXJhbGFnZW50fX0ge3tjdXJyZW50VXNlci5hc3VuYWNobmFtZWdlbmVyYWxhZ2VudH19XG4gICAgICAgIC0ge3tjdXJyZW50VXNlci5jaXR5fX08L3A+XG4gICAgICA8cCBueENvbnRleHRNZW51SXRlbSAqbmdJZj1cImN1cnJlbnRVc2VyLmFnZW5jeXR5cGVcIj57e2N1cnJlbnRVc2VyLmFnZW5jeXR5cGV9fTwvcD5cbiAgICAgIDxwIG54Q29udGV4dE1lbnVJdGVtICpuZ0lmPVwidXNlclJvbGVzXCI+e3t1c2VyUm9sZXMuam9pbignLCAnKX19PC9wPlxuICAgIDwvbngtY29udGV4dC1tZW51PlxuICAgIDxidXR0b25cbiAgICAgIG54SWNvbkJ1dHRvbj1cInRlcnRpYXJ5IHNtYWxsXCJcbiAgICAgIFtueENvbnRleHRNZW51VHJpZ2dlckZvcl09XCJtZW51XCJcbiAgICAgIGFyaWEtbGFiZWw9XCJPcGVuIG1lbnVcIlxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICBjbGFzcz1cIm54LW1hcmdpbi1sZWZ0LTJ4c1wiPlxuICAgICAgPG54LWljb24gYXJpYS1oaWRkZW49XCJ0cnVlXCIgbmFtZT1cImNoZXZyb24tZG93bi1zbWFsbFwiIHNpemU9XCJzXCI+PC9ueC1pY29uPlxuICAgIDwvYnV0dG9uPlxuPC9kaXY+XG48bmctdGVtcGxhdGUgI3VzZXJJZD57e2dldEN1cnJlbnRVc2VySWQoKX19PC9uZy10ZW1wbGF0ZT5cbiJdfQ==